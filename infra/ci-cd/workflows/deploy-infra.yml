name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod

jobs:
  deploy-global:
    name: Deploy Global Infrastructure
    runs-on: ubuntu-latest
    if: inputs.environment == 'dev' || inputs.environment == 'staging' || inputs.environment == 'prod'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: |
          cd infra/global
          terraform init

      - name: Terraform Plan
        run: |
          cd infra/global
          terraform plan -var="account_id=907849381252"

      - name: Terraform Apply
        run: |
          cd infra/global
          terraform apply -auto-approve -var="account_id=907849381252"

  deploy-dev:
    name: Deploy Dev Environment
    runs-on: ubuntu-latest
    needs: deploy-global
    if: inputs.environment == 'dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: |
          cd infra/env/dev
          terraform init

      - name: Terraform Plan
        run: |
          cd infra/env/dev
          terraform plan

      - name: Terraform Apply
        run: |
          cd infra/env/dev
          terraform apply -auto-approve

  deploy-staging:
    name: Deploy Staging Environment
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: inputs.environment == 'staging'
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: |
          cd infra/env/staging
          terraform init

      - name: Terraform Plan
        run: |
          cd infra/env/staging
          terraform plan

      - name: Terraform Apply
        run: |
          cd infra/env/staging
          terraform apply -auto-approve

  deploy-prod:
    name: Deploy Production Environment
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: inputs.environment == 'prod'
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: |
          cd infra/env/prod
          terraform init

      - name: Terraform Plan
        run: |
          cd infra/env/prod
          terraform plan

      - name: Terraform Apply
        run: |
          cd infra/env/prod
          terraform apply -auto-approve